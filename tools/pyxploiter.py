
def getPadding(size, repeat):
    out = ""
    
    currentAsciiCharacter = ord('0');
    
    for i in range(currentAsciiCharacter, size):
        if currentAsciiCharacter > ord('Z') and currentAsciiCharacter < ord('a'):
            currentAsciiCharacter = ord('a')
        elif currentAsciiCharacter > ord('9') and currentAsciiCharacter < ord('A'):
            currentAsciiCharacter = ord('A')
        elif currentAsciiCharacter > 122:
            currentAsciiCharacter = ord('0')
        
        for j in range(0, repeat):
            out += chr(currentAsciiCharacter)
        currentAsciiCharacter += 1;
    return out
def getPaddingOffset(padding, elem, pad_repeat):
    offsets = [] # output
    skip = 0
    for i in range(0, len(padding)):
        if padding[i] == elem:
            if skip == 0:
                offsets.append(i + 1)
                i += pad_repeat
                skip = pad_repeat-1
            else:
                skip -= 1
    return offsets;
    
pay = getPadding(512, 4)
print(pay)
print(getPaddingOffset(pay, "0", 4))
payload = "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSS" # We removed all which is after the character that is just before the first 'T'
print("Exact match at "+str(len(payload)))