#include <iostream>
#include <fstream>
#include <string>
#include <unistd.h>
#include <fcntl.h>
#include <vector>

int exec_file(char executable_filename[], char args[]) //Returns the return code
{
	int r = -99;
	char command[256];
	sprintf(command, "%s %s", executable_filename, args);
	FILE* proc1 = popen(command, "r");
	
	if(!proc1)
	{
		return -1;
	}
	
	
	// Usual error handling code goes here
	// use the usual FILE* read functions
	r = pclose(proc1);
	printf("Ret : %d\n", r);
	return r;
}
int exec_file(char executable_filename[], char args[], std::string communication) //Returns the return code
{	
	int r = -99;
	char command[256];
	sprintf(command, "%s %s", executable_filename, args);
	FILE* proc1 = popen(command, "w");
	fputs(communication.c_str(), proc1);
	
	if(!proc1)
	{
		return -1;
	}
	
	// Usual error handling code goes here
	// use the usual FILE* read functions
	r = pclose(proc1);
	printf("Ret : %d\n", r);
	return r;
}

class Exploit
{
	public:
		std::string payload;
		std::ofstream file;
		
		Exploit(std::string out_filename)
		{
			file.open(out_filename);
		}
		
		std::string getCharStream(char byte, int multiplier)
		{
			std::string ret;
			for(int i = 0 ; i < multiplier ; i++)
			{
				ret += byte;
			}
			return ret;
		}
		void nextLine()
		{
			payload += "\n";
		}
		void save()
		{
			file << payload;
		}
		int run(char exec_filename[], char args[] = "")
		{
			int r = exec_file(exec_filename, args, payload.c_str());
			return r;
		}
};

int main()
{
	Exploit exploit("payload");
	
	exploit.payload += exploit.getCharStream('\x00', 0);
	//exploit.payload = "Hello";
	//exploit.nextLine();
	//exploit.payload += "su";
	
	std::cout << exploit.payload << std::endl;
	
	//exploit.run("sys.exe");
	
	/*
	exploit.nextLine();
	exploit.payload += exploit.getCharStream('\x00', 20);
	exploit.nextLine();
	exploit.payload += "ls";
	exploit.nextLine();
	exploit.payload += "read";
	exploit.nextLine();
	exploit.payload += "Top-secret";
	*/
	//std::cout << exploit.payload;
	
	exploit.save();
}